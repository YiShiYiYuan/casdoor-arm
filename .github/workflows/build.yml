# https://github.com/casdoor/casdoor.git
# https://api.github.com/repos/casdoor/casdoor/releases

name: Build

on:
  push:
  schedule:
    - cron:  '30 7 */2 * *'

jobs:
  release-and-push:
    name: Release And Push
    runs-on: ubuntu-latest
    # if: github.repository == 'casdoor/casdoor' && github.event_name == 'push'
    steps:
      - name: Fetch last release
        id: fetch_release
        run: |
          last_release="$(curl -sSL https://api.github.com/repos/casdoor/casdoor/releases | jq -r '.[0] | {tag_name, published_at, tarball_url}')"
          tag_name="$(echo ${last_release} | jq -r '.tag_name')"
          release_time="$(echo ${last_release} | jq -r '.published_at')"
          tarball="$(echo ${last_release} | jq -r '.tarball_url')"
          echo "tag_name=${tag_name}" >> ${GITHUB_OUTPUT}
          echo "tarball=${tarball}" >> ${GITHUB_OUTPUT}

      - name: Fetch Previous version
        id: get-previous-tag
        run: |
          tag="$(curl 'https://hub.docker.com/v2/repositories/wbchn/casdoor-arm64/tags?page_size=10' | jq -r '.results[].name' | grep -v 'latest' | head -n1)"
          echo "tag=${tag}" >> ${GITHUB_OUTPUT}

      - name: Decide Should_Push Or Not
        id: should_push
        run: |
          # echo ::set-output name=push::'true'
          old_version=${{steps.get-previous-tag.outputs.tag}}
          new_version=${{steps.fetch_release.outputs.tag_name }}

          old_array=(${old_version//\./ })
          new_array=(${new_version//\./ })

          if [ ${old_array[0]} != ${new_array[0]} ]
          then 
              echo ::set-output name=push::'true'
          elif [ ${old_array[1]} != ${new_array[1]} ]
          then 
              echo ::set-output name=push::'true'
          else
              echo ::set-output name=push::'false'
          fi

      - name: Checkout
        uses: actions/checkout@master
        with:
          # name: casdoor/casdoor
          repository: casdoor/casdoor
          fetch-depth: -1
          ref: refs/tags/${{steps.fetch_release.outputs.tag_name}}
          # token: ${{ secrets.my_pat }}

      - name: Change arm64
        id: set_arm64
        run: |
          sed -i 's|GOARCH=amd64|GOARCH=arm64|g' build.sh

      # - name: Pull code
      #   if: steps.should_push.outputs.push=='true'
      #   run: |
      #     wget https://api.github.com/repos/casdoor/casdoor/tarball/v1.450.0 -O casdoor.tar.gz
      #     tar -xzf casdoor.tar.gz && rm casdoor.tar.gz
      #     mv casbin-casdoor* casdoor

      - name: Set up QEMU
        if: steps.should_push.outputs.push=='true'
        uses: docker/setup-qemu-action@v2

      - name: Set up buildx
        id: buildx
        if: steps.should_push.outputs.push=='true'
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        if: steps.should_push.outputs.push=='true'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        if: steps.should_push.outputs.push=='true'
        with:
          context: .
          target: STANDARD
          platforms: linux/arm64
          push: true
          tags: wbchn/casdoor-arm64:${{steps.fetch_release.outputs.tag_name}},wbchn/casdoor-arm64:latest

      - name: Create tag
        uses: actions/github-script@v6
        with:
          # github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{steps.fetch_release.outputs.tag_name}}",
              sha: context.sha
            })
